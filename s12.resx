<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAArMAAAA0CAYAAACZzbBSAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAHKFJREFUeF7tnb2rddW1h/1IVAgW1inff8BCLCRdIJIuSMBGSSfYSQhcsLmCaSQh
        lYJJkVSJiI2FNiGd+QNMleJFbhVIYRFuk497k539bM9v53fGO+aac6299td5xwOTveZYc445xphjfpxz
        tr6PbIqiKIqiKIriSqnLbFEURVEURXG11GW2KIqiKIqiuFrqMlsURVEURVFcLXWZLYqiKIqiKK6WuswW
        RVEURVEUV0tdZouiKIqiKIqrpS6zRVEURVEUxdVSl9miKIqiKIriaqnLbFEURVEURXG1XPxl9osvvti8
        8847m3v37m0+++yzG+k0X3755eaDDz7YvPjii7u+pwL7Xn/99d24c/n88883b7755uaZZ565kbTBJ9rh
        Z3E+yM33339/l5unzLNj8umnn+5y+JFHxreGa1qjh7IkPg8b5MPoXlY8HPh6n3M+ci6y3ubk0rXuLedm
        Saz9DBzd+4/F0I6MkWzesZwCHZSMN+eg5NChzyHJzIKYA/Y999xziy+zL7/88lBc8akus2PMncM5kJtr
        5Nlcju0TOTxnfZ9zjaKDjRQ9FDbjbF0g06Z7CEvi87ChQ/EuxIj5PvchfRdg/RFLcmLuZXb0XBRr7C3Y
        qnFlc8wDxtH7WJbuM9pHvSy5TyxhSayX7P3HYthqJo6gYjSHwikhSEuCRZ9DDsolCUmMliafkqJYBy59
        h8z/CMrNY4/jHHoh66F1PodzrFEOLH6o05jsUWzGXDYdHW5zN+oWS+LzsHFX9jIu5XNzumhDTsw9H5fm
        En2W7C3sF+yxzD399YMZhQuf4B6EL7Txwv5zyB2JCyL7WhzvFGD/3Fgv3fvXZpbVcvTURi8NFn2weQlL
        f7NAcs9drGJJIhU5bAJsCEvnfxTl5rHHEaf4jdeSy9o51iiX07jWZEfGWutrSXweNu7CXsYPw/gwN6eL
        NsRz7vm4NJfos2RvYd7jJZLLKfrYf0VLN+cOF9JDONcesyTWS/f+tZlltRyV0Qq4y9TGZXySBPrTuA5k
        fvohaZDxHStktIl/RqW/6wP6+Z8B+GkoJiBy7EEuW0cWkmzxArJdPzVhf7QV/T6Gx0h6Wngi8cw4FH6r
        JPAlfh+NheMy7xvt8/jH4gs1/vnWixYqbfQnVwrzgf4e+CDdfOo3aZ47PIPm3mUwNf/+k62Kz4PPTyab
        At0alzGk120DzQHv3Dbioz9345tyTT/Jx/nxmLbysoV0yY4sX0H20AZb9SxG9Jx6jYJy3nVil/Ipwjjo
        n0svPjA1b2uvz15c0UkMs7jKpinoIx/5VDwVPwrP0Fqfaiu8L0U2UXq6Mth7iAd6sBcbpddjAaNzg4z+
        PGdrTbk9te/xSb7wHh98H0UnoEeyOCfYfujcSqYiuz2+tIFD9vApOwE9iq1086mxYUSPcscZ6Yc8i9NS
        6M+YUyiehyJ7Bc8qQm1cRn5gI++i38wH+S4ZOTgS616OKK/49HxH1ym5bXUHOarFASzcnoxPBYN3BIKC
        0xQSniAjI1Akv0P/OAb9FFT6Uo9JRB/a6MAg0MjiAZKRTSobIuO4rbThWZAoFCHfGbuHxiRGGgNdjCnQ
        p3GFL2xiiX+0o1+MJbZQ0E3RvHhSxzjxSZ0xBPYhU8JqjrRhT4FNigf93EbscL2QyUbn3/vQlnY+P5ms
        hdqSBxpX8fNxeB/b4KPqtKUPbYgDYyPjPW2Zf1Bs3Db1HWEkXxmLMRhLddr4GCN6NP/SA/QZmSPaLFmj
        6MV2Cv0Ym1i5Xc6c2ImR+DDe1LytvT6n4opMMaQNc8dY8l02TqF4gnwRo+szxhq7sBPfeYZRXRH6yy78
        jj4yjqAtbUbmhv74TXvlE3I+BfF2+9RG+x7vlSOMob6SYavbgsznZI25pZ180jwK6lojPV+mmLJT8B4Z
        72mHvehX7GFEj/xzRvrRhzZL9paMkb74uFS/Q4yiz/gyJSMWmkPiITu0ptBJLD1m9HdirGlHfSpHXMYz
        8IyM/qfidmQ6yFEZDHKkJ8smJ0vS0THYkHwTUPAc6nFhItPETJHZxsT75GtxRD+1WHnP+CTPCBrT20/F
        yBnpqzj6YpOMtgL7SXQnzp8WCJ+CzUS+T0E/T/K4+KM9EGWj8x/1+PyITJbBRhXjohzQOMSj1SYeYtFv
        3jOGI78UZ8ahPkIvX7VRRTuYRx9jJO/lk8uOvUYBH2Qvn1NrbU7sYDQ+c+ZtjfV57LjS7tD16b4RA+Lj
        OsWIrhasWebC0biyec7cRPuynKaP9wVs8P0jmzNoybzvWnNLnqEr+k6d9QsjvrTo2Un8qXtMsQnZXH81
        P86x10CEOY25FlHMp/agUYjRSBwyGfU4h9QzWU/fnHxXXkG2do7NbU86yFE3MDM6k40EDkbHEMhYoLyP
        uqijz0EWEzwjs02wQNFB4tIm+kmhf9xIekzFY+oQhCmZ7FNiIheKrR9YXFyiLnyKlzRBX80vnz3Qj654
        SIpoI2QymDv/mh8nk2Uw33FOFT+Nw6dsiUV91UfzIrAh9lFRrKR/Dq185TCgHg9x2RGZyvuWT4DsGGsU
        yGnyifb0Y6ON/oi5sRuNz9J5k0wxG12fYklcR/J8jfUp3zjgpi4BI7pa4Ev0J8Zw6dyAYq/5idBf+t0O
        9RvxK/YVa8yt/FL+coa05qLlS4+WncqhSEv/lL+t+YElcRrdWxz88QtdBjGk3RpoLpwsDpmMeowx9Uw2
        ok/08p1PIZlfcI9NbnUDOZoZ3ZONBm50DBYoOlmcBLk1qcgdZD4RLTJ9bAY6zDnost9QySaSmne9BeCM
        xmOqnZP1ZeGzyWiDo44/flnGZmT0z+oCvejCV57xfSS2wJzRlxITHpvjWFG2dP4zG0ftzvTht8v57OlS
        H58XoF/UH+F99LNFL19burDD5SN5n/l07DVKXqJbuYtd2EhOeT6LObGD0fgsnTfJPGYj6/PYcYVD16ds
        0id5kzGiqwW+ZP54/6VzA1lOA3Xi0tr31G/EL2Ted825JWfIHXII6BPnoedLi56dLT1L/M1kp1gDAv0j
        5zgxpO0aYONIHFp+Rx+pZ7IRfaP5zqeQLMb/mNy2uoMczYzuyUYDNzJGXKSQ6aIeg4ksTmpGpo9+LB4d
        LC0/KbShLXaOXmhH4zHVzsn6YhdJSXLyDlsz+9j0aEcbfECXI9998cr3OchGPzCpx/Fcdsj8ZzaO2o0+
        YuIoDhpHdihHHPmoPj4vgA3kTARdapv52UL6ZEscV7ri/NPPx+jpgSg7ZI6QjcwHcxF/y4Iv9I8XMJgT
        O5gbn0hv3iTzONJnan2eIq6OdM9Zn+A2YSvP2UE/oqsFvkR/iI/3Xzo3EHMaJJva99RmxC9k6nuMuVV/
        Ln/kFGOIEV8yRuxEB20ibueov1F2jDi1IO+z8zEim9YCG3txgJbf0Ufqmaynb06+8ylaa+CY3PakgxzN
        FoRvdjxH50YCB5JlgZEs1iHTRT0GE1mc1IwRfZkdPtFKcL8ITJGNKVnP19G+2Ob1DN73YpSN575PQV8n
        9kOvX1KIHTL1w77oV2aP9xGMEw836iN2cxgwn1n+axxdpnyjBdaE1khmP/ADBPJ46BMLjZn52cLtgjgu
        48Q2QCx8jJ4eiLKsTWZ71A3IRuaDNjHOQP8YQ8jGn2I0PkvnTTKPEbq9HjlFXDN/vR96ptYnRJvoz9qJ
        F4MRXS2iXaA54/IGh6yp0VhHO9Qv+tCSqe8x5hYfiTt7V1wrI75kjNjJWLENuJ2j/kbZaD/qyB1kPf/E
        6EUWyLNsL1oKNsZzSj4qb4E8zvyOPlLPZLFvjGMW16grmw/JYvyPyW0rE/gtgTYhnuNvptg0MJrA4wDG
        K8B80o/g8x6ZTwS6kHnCqK9vPtqQ+ATaU1fyMK4mRpcGtfGgMzaymCQZGhPd6MJPv5hS14KlLSXzE1s0
        pjbYFoqHJ4XioYsQZHEb7UudjU0JiQ/MmfdTAqsNBZl8BMVH88QnevGTd1O+Ekf1ox39POl1acRu2rk9
        mg/qU/MP6EAOkvmcISNG2Exb9Mi/DNrT1+dSMUav5kNzIb94JztAsaOdw9j04Z1irk+hvopDL87Yil7a
        ue8U4L1kgE7ZoHiM6OEz6qFOW8jmSG08NoyBjPF6xDHpS6ywl+eI7MaWUUbiQ+nN21rr8xRxJX6HrE9Q
        rOWbxqefx2BEVwv5rbmRrcRVzJkb6RGKI23Rgz3KOcWHT/QTV95hAzLauB3S5Wve54TnY82tYkpfZ8SX
        jBE76cu8+nwjl53IRvSA5kf2j/RTmzlxcvCfcYmdF2Tyx5FPGYp/670gVuhRHmODo7zCb3SRX4oN7+hH
        iT7iN/ooPAva0NbnOcZ6JEfUBj+F5trXwLHpXmY1ERSC6MEQcobJwFkCrclQAnnhfZQxjhLSZT4+Rcmp
        g4Bx0OfBy/RnsimwmwmTT8CnFqgmkmdsavkZfUKWkfk+IsvGaPUF5lBJHItsI5GV/LENegF/NQafxILY
        e7xaKK705TMmPHbovd6pnRYez7zP5l9gh+xT3tJf/kvOpzaIHoyjuNCPPKBOfGUbOrFDPvi6oR0yFXQ4
        6NCGQn/Nm0BPzMsWvXwFPrHPx+M9NuAr9PS0fJqaI+reh5LJeij+ao/dmgfHdVJi3FuMxAem5o32PrZ0
        RBmMrM9jx/XQ9Zn5Roky6OmagnGIgcajn/Q6c+fG0dzLNvJBffhEN+/QyzqJftImyiitOUEXz2vOLfs5
        cxrp+TLFlJ2CcaWfdrRBNzHVZamnR/1VND9T/ZbGSUh3VrI4EjfsaMEehd/YMIV8jTnqKI8ZjxjSjn7M
        16jfLVkW6zXyHdkpmN7V7t9nt7mpbOH5rtXx0TmFz+cYc1tIzN0mEd7/5ZNPNr/ebjBaQL97663NH957
        b/e846a9Lrmxf1qPPsKJ/NyzpH6NdkeuIc5z6ufgDDFkHe7W501d71m3rE/KnqT/7HrM9UvMm2gj3NjJ
        Ibk7KLN+Vd8+fMXHP/rRbk/fM1efc4k5ckj9ErhrMc3q2TpemenLLEY89dRm89FHXxWe71rdgw6n8Pkc
        Y27Lj599dvPxK6+k7//5xBOb37/xxuaPb7+9+ev2p6n4XvWfvfDCrXp8v69HH+FEfh5Uvza7M64hzqP1
        c3GGGP79sce+Wp/Je9bn/3/967fax/6z6zHXLzFvoo1wYyf7GSXtV/V9nbya0/5WPXKJObK0fincpZi2
        6tk6XpnpyyyMGnut9Yxen0PrGb0+K9TZ1P726KOb37722u7SyjtdYn/z0kv7+ve3l1kurTz/68knN39+
        991d+388/viu3tJ/q96i1+/c9Ra9fueqtzaJ0f6XXj/BJthk1MaV6v91795ufXJp3a3PrUyX2N367PSf
        Xc/o9Tl1vcH//vKXu1ixp/Hc1fMQ1YkHl3z2awr7/Zz+t+rZ+hvte+n1c+4tkVGbr7V+AvqXWWDSfeLv
        Wj2j1+fQekavz4F1/oz581df3X1VgO+yfGtbfvj88//5ftRNe75/xHdzeE+hPd9z+tOHH07qf6Deotfv
        3PUWvX7nqE/9+Wak/6XXT/DnqUlGbFypztcJWJ8vf/Ob+++bsT4P+hNxr57R63PqekDf+dP+xDOyB/o9
        pHXyiD37u08/vfuKwZ5G+z1ZvbX+Rvpeev3ce0tkxOZrrh+ZsctsURRFURRFUVwgdZktiqIoiqIorpa6
        zBZFURRFURRXS11mi6IoiqIoiqulLrNFURRFURTF1XK0yyz/hbz+NYg58D/m178w0QPdtOO/3nzY8H+J
        467BfOpfdtr9V8rFLPi/UehfLirasIbYQ64hz3xfHLWVdcQ+zL9aNGcfVv6c6l/uKYqiOJTh027/v28a
        gE1U//uUJZdZ/ZNtPR7myyxxuqsXFi4ZXGb3/8udYhbET/8k6ikZ3SPm7CXHxNfQWnlG7I+Rs/rhdY6t
        7Iv6Zz7n7MPo54Jfl9miKK6FodOOjXTJxjZ3ExX0OfVBfI3c5ThxoM45uIvbsF5PmRtz9gguSpeCLntr
        5RmX42PlrNb7XP30mbsPM5d1mS2K4lronnb8dM9veeoye3nUZbZoccrL7Jw94tL+mrBmnvEb52PmbF1m
        i6Iocrqniv5cqaINzr8OQKEdMge5b6JqS5naKP2SxjNfJaDwWxTBWPE7o/pTnGTeN/5pkwNYB2ssyAVj
        8pukrB3jqY3Hibj0vvqA/dLLJ/1BvlMUOx24LgO1Fd6XQoz13NO1JviusYk9z4zrY/v8ZzK15dPrKtFX
        4T73YA68vRfPF88BPv0dz+jAHtfHp+cA71rrhXauh2eNRy72cgn0HWPp1rODHs95z1NfO8iwhWfF331D
        TlvhuU+hXYb+TO5FTOnHBuzmPe3wjYKdslX9eJbNgpjyjjYed1Be8Sn7aEs8/T3F/Yoy/YbXS7TDwSbN
        UfRX0F+xpa2eXe+IHt7RTigPFBP6e04DflHUVu205xVFUVwS/RN/izY2h41NhyEbnDZbJ26iPNPHD5MM
        2tGXAwXdOrAYQ7Ch63Ig0CsZmzobNO3ox8btYCsF3RQdFG6bDiht9HxSZwyBfcjkJ+Np/CmwB/1AH7cP
        G1wnZDLFSeAHvmInzzCqa02Ij/wnPsRWB7Bs9HzKZIqj+gHvsdkP1JgDkMki6CDmHNRATKjHPCGW2K88
        1MGOXdSVI4zJO+SaF12IAP9oQx90UUcvUFduyUf0yA/Z2IJxsFuxok4/imBcxvNLGn0Uc/zXeIyPX7Tn
        k3fYG/V7/qDH56+FYuP09CNXvJDxXnOCza1cA2JHUdx5j9/UgbaMhR7mQH4j0/qkLeO7f5lMunz8DM21
        2ikmGg+0RuN8eb8RPYBMsQTige3EAz8074oJ4BdxYHzktGX8Xi4WRVGcg+kT/4bsoGJj00YLHChsiI5v
        ojqERtCm7JurZM6UbKovmz91DgMhGW0FPrPpO8hclw4dPgWHQIxXhD4cEMJtgWgLRJn7xfgcNK5TjOha
        E3x3f7BJBy7wPsYnyjQffDKX+OY6hMdAZLKI2ni8JPNxyHNvgy204QIgqMcfXpB5fEfXS9RDTJBn8wrI
        eR/zRxcywdjxIiIblLtZTEAXPUeXQpHNaUY2N6P641oE5K1cw6/Yh4se42suPM8Ec8zY3jfzL8oyXRmM
        7b4ppzxfGLs1X9I/ogeijHh7/iombjd+MQdOFoOiKIpLYPrEv2FqE2MDZNNlM6Q41NmAs8NqiuzAk4wN
        W0y1cyTTZq0LKHLBO2RuJ3ZHXcQhO1SBvrynT2/TRzd6WnGJ9kGUyS8Oo3jwOCO61kSHLPp9vkSWT1Gm
        +UAXvrUuc4qBk8ki6KWNH+Dqp7FkQ1Y8B6jHWCLLcgCdU+sl6snsdPQ+xoexXb/qWVEOtuIW23vRuHH+
        WmRjRJ1eevqnck1jZUUXRc1xjK/mSGTjR1lLVwvsxX5yiX6ae+1PcW+QP1F/S4/IZEBs2Z+JX9Tb8ndq
        nymKojgXD55cCdnGxkaozY1NVxutQ51DgU2Wkl1sMjJd2UY+1c7J+souHZbU2dTdRg4VHZRZXaAXXVxQ
        ec7ilUHcFJvenwYhyuSXPjnQMkZ0OfjA+16Z8lFxyOKVxSfKZIN8898kOXrvZLII80zuopdn1TMbeshO
        B5nrGl0vUY9s4DOj5StjuZx61B1p6ZoaX6Df/W3R8vsQ/fTlXcw1nns2teIb7czGj7KWrgxdwrlMkhv0
        k+09m1w+pUdEGbmuSyz9W7+ZzfylXVEUxaUxtDPFjY3NkI1Qv92AuPmDNlFdAjnI6dsj0yWZb7hT7Zys
        L3bot6O8wz/sjLDZ0442+IAuB52889+ixHj1kH1+oaUex4oy9QP9Jin+NgdGdB0LfNJhK7L4RJniyic+
        8ez5JjwGIpNlMN+MiX3S7/kpG+IPGjAyV/Jn7npxsouGIz0xdxnb9VNn/UWwTbpbcUPm8yc8BuiXv1O0
        /F5DP+091zRWtudIt+eZo8ueyMaPspauCHah2+eMfshBeuIPp/JH+nt6RJRhs+/Fmd0tf2lXFEVxaQzt
        THFjyzY/bbSOb6Lqk11IIpkuyXpjjvbFH69n8D5u6JFsvBivDPo5sQ86/YDn4EHm/eLY9I+HG4zoWpOo
        N7MzXqyou//KF82RdMTLuuR+YcFXHy+D9n5ZaUGb+EMYvwFzHxkr+oxM/kRfIMYEMj2sF37gaqGLfuzH
        2K6fixH1GD9iJd8ym4Af5rK88rXMeD5/LbIxDtEf/Xb96OM57jlcZHuXWWIex5+bsy0yX+gnX/Qb1thG
        vkl/T4+IsljP7M50U6ddURTFpTG0M+mw4dDjEIiHBJugNjodFNqQ/QDQJYN+fjmI6Dehvrmqrw4hUDs/
        BEf7UufA0qaNTWzw3k+Hh9pQkHExkP3xksAnevGbd8Qhg3iqD23o4wcMddpgM+3cFtmIze4XNlGnn/sx
        omtNFCfsoTAnyITsJj7YxPwQL9lNH+ykDe8EbdRPqB066Ut75QDvWvGnLW10IaHQF7u9j+YX23hPIZ6a
        f60F90/zoNwfWS+gcTQnslHvW8S4MB42IkOH5kEyxsZPfQrFzeMLsp+idYIu2Qn0xXbGmbJX8aQveol1
        T7/bTltHPsjHmGvyif60Q7+/V4yRYws6eCamPAtktMP+Vs7KD9nj8XEUK9rTTjGR74B+yWhDwW7ZgK0j
        emQTbQV95B963DcKcuKl+RTKM5dlyI6YB4yFTnyLKJZFURRLGLrMsiGy0bDB8QzabHXosHFRR64Dwgtk
        sog2bBU25REZY472BTZwbc6x6BDCV/yjxDboBTZ2jcEnGzYxIF5cplpo86ZftsFjg97rndoxRuYXJcqg
        p2ttiK3HjIPUD0DGVOzxQzGkH7ZGP3iHPMqEX1iYM/rzfir+jIkNWQ4QG7eXw1n+oFdrINpEyWRArHlG
        D218vQjq6NdYfE5dDAW26kKC7fKfuHh/4q5YqZ2gPXIVfwfYrFhldmV7RIbiTlufnyn9bheFtqKXazwT
        Y8bjPe39PTC/Gpt2tI9tejkrNA8+rxHtK2qHLnTH2DEHbjdtaUfc6NPTg1288wL0Ry8F3/GNZ/kV+2R6
        3OcI+rM2GieLDWNjd1EUxRKmL7P373PK3FS28Lx2nTHEKcbbFjbs3YYa3v/lk082v94eGjrIf/fWW5s/
        vPfe7nnHTXsdIrF/Wnf/4EQ+7hmpRxuXcom+eR1ubGQOOchjmz99+OHmv7/97a3oRhbeH7POBYD8m2zv
        XEO8xaXbeuw63LUYFEVRXAjTl1k2rqee2mw++uirwvPa9bhZ9tqvUP/xs89uPn7llfT9P594YvP7N97Y
        /PHttzd/3V4u4nvVf/bCC7fq8f2+Hjf/E/k4qx5tXMol+qa62Nr4ryef3PzgG9/YzXHW5/++9rXNn999
        90EdR65/f5tvjN1sH7mGeItLtvXYdXGXYlAURXFBTF9mobepHVqP9NqvUP/7Y49t/vboo5vfvvba/kKj
        S+xvXnppX+dywaWVZy5AXHBo/4/HH9/VW/pv1TN6fU5dX5PeWOeqc5G4gXlk/skD5vx/fvKT3Xwyz/yQ
        g2yVMWfUGZsfnn7xne+025sPe1ptz12/JluPXfdYjPa59Ho2v0VRFGeif5kFNi7fvNauR3rtD6zzdYKf
        v/rq/vtm39qWHz7//H++w3fTnu/t8R083lNoz3fX+FP0lP4H6hm9Pqeur0lvrHPU+ROvcf9Xv9r89Hvf
        238n8btPP322rxfwtRblGLZQ0vbBhz1Z23PXr8nWY9djLEb6XHq9Nb9FURRnYOwyWxRFURRFURQXSF1m
        i6IoiqIoiqulLrNFURRFURTFlbLZ/BvHTYSy4eWmTAAAAABJRU5ErkJggg==
</value>
  </data>
</root>