<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>