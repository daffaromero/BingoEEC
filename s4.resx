<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>