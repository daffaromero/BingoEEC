<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lJ0AAAAASUVORK5CYII=
</value>
  </data>
</root>