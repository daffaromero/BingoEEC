<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mZC3t/8B0W8yMnQaYH8AAAAASUVORK5CYII=
</value>
  </data>
</root>