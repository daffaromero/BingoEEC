<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Qghhk2/f/geiurs0JHMD6gAAAABJRU5ErkJggg==
</value>
  </data>
</root>