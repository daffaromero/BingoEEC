<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        43/XkSSbdUBddQAAAABJRU5ErkJggg==
</value>
  </data>
</root>