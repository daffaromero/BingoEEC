<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>