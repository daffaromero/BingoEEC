<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>