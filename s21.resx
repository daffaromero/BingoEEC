<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>