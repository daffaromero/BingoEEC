<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgEAAAA0CAYAAAATzutWAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAADcFJREFUeF7tnL2u1EgThjfclJCYgBtA4goQV4DIyUgJiUgJyOEGINgMiZBgRUKI
        RLDBCokLICAkOZrlGb6Xr06darttj2cG/D5Sa6bb/VNdVd1dtuecP3bGGGOM2SQOAowxxpiN4iDAGGOM
        2SgOAowxxpiN4iDAGGOM2SgOAowxxpiN4iBgARcXF7tv3745nThhB2OMMdNxELAADqCvX786nThhB2OM
        MdNxELAABwHnkRwEGGPMPBwELMBBwHkkBwHG9PH06dPdH3/8Gtv+u3fv9rLyadbDQcACHAScR3IQYMw4
        Hz582F27du2XCAK+fPmyu3XrloOAI+AgYAEOAs4jOQgwZpy7d+/unj9//ksEATyxkKwOAtblIN6AwYgw
        id7g06dPu8ePH+/LTsGbN292Dx8+3Dv9IWBezIV5RhwETE8vX77c3b59e/f58+fyOun9+/e7e/fu7a5f
        v767efPm7tGjR4P1W0GA/OBX2PTOBXwdPx9bO1rz6JY7NnR9bJAxysmdLvaes+/kvnpAV69evZrVtkVr
        r1kKByp7sh6xnzPYEZ+CtYIAzih0cuPGjUm6nuNjcaxzDGh+egPKbiWEv3///t7hK7QhKAiQomh7CFrj
        tkDRyLz2wnQQ0J/evn27P/w52ElVHdLHjx9/HvzkaUeeoCDXVWoFASw+PVI047BR4efoa2jtKMBnnbM2
        tNanbnC0UcJO2j8iyBHrRbn4HvPIwz5FvankvnpAXnwsy7WE1l6zBK0D+v4VggBkxZaArGsFAQSu9D81
        CJjqY4zFGGvNZSmXZsJhi6DRoXEclEUZ11qLNaNJHwIO9KnMWdRTcRDQl7j7f/Lkyf5uns+hIIDDn0M/
        lqkNAUEsV2oFASC/NcNwsBMEAGu8tXZ06KkusB/kfaMX9hwFHgQTFWy8XNfBMMQh951e5s79WCCbDh8F
        AdhsqszHCCCwXzyUGY9x8clDo/nE8XqY42Mai89z49JMxhazIv4e5znUYpz7RAEZpzr5VBwETE/Pnj0b
        DAIIAB48eHCpjMOfNgQDsVzJQcBhGVo7HP7oMx/I0nPPDUKGvYJAn/YEIxW9NjzUvjMFxlt7r5mLDp8q
        TZVZfa1JljGmQ+Mg4AdXZoKgLedggWuxajJsBtX7/6wo5ZXUnj510JN41KKNhH5jGxKoje4gkCm/MmAO
        pNg/9biTgSiPnECGimW0p2/6UpmoggAOOQ6y+N6bd9x37tzZl+X6ayTdOTNmfJfOXTblQ4fw2mkoCEBP
        XKNOLGcOlLdeCcQgQO/esCF3D/oewY4qx4fiwYN/RH+mLt9JPa+lVJ/+5cesEckClONPjI9vRiRXaw0e
        A62ditajUK3VOZscOuNpIzqij0rPeUz93iPLSV9VXfVNinsMtPqqoJ38Q33xGdtib5WTGDsGTXE/4Tt9
        SabWXpOhrvY12grmQn/Zr4T2uDnMbSvfQA9R75J/qE+u9fjUmI2BtS27oCP0zPeo6zHbwRwfk+74pK7W
        +Zidj8EV7SPY0GKQQeVkTEpKi2RFoRAmjpNLOXyiOD1apC8ZR1QKZ2z6wqj0ofGj0ulDfVNO3bw4MC7t
        shPEMtphtFwPchDAIcYBxnttDq0XL17sDzAOL8pi3bUSj95Jr1+/3svAd11DFgKRfKd9zDQUBOiOPwcB
        pJ4gAFtjY20aumslCfyPvOrIv7AxxE0AX6c+dfE3+h6CtvSHz9BevocvUibol7paS/Ga/E9r4hQgb2sP
        oBz5MtKj9DoF2tIOXWlzzP3EMaknm2Q5JYeQLSgH2pFH9zDUVwW+wb5Cv7TVQRbb0pcOAeqRpw1Qpv2E
        OtgZWWhP3dZek6Edcsuf8Rv5LmNUUC7f7plrRrqbAvKRNC++C+SRripky7Exx2wMGgt78Z02OrSjrods
        JySX6Bk/lvEd+E4Z7U/JFe0i1JCDSAGxTlYKxDKcE+XnyeLI8VAGKYY2UPWNkaLjyMGkXEC+bDzK8txo
        J+OJ3rLqSYASd+Ecttx9t95lr504OPUDu1g2Jo8O6t5U9dFKawUBWohxkwEtdIHPxcOcxZ5tK5/jmlBZ
        L4yLj+Lf0S8j2hiizJQhXxy7gna9KfvtGNU6EZTTZ0b6ac11CNqqHeue+ZO0B0A1ZiVnthN9kI99YZvc
        ruorg53oK+5j8p/YFtljEKc9LUI+732Ca702i/6LDGN+swT561yqOVM2x2ciPTZmXA70SBVw9dhujo9J
        d4wpVLZ0/ku5YlGEGloMUkCsk5UCKmPSKKSCPqhTJW2MVd+CxYiRMBx1ojLpO8+DfJaFdowR6S0bCgJ4
        JM9rgepAq9IaBy+HZjw49ad3sc6x01pBAAsXG+VAUz6WYbOkDRtDtm3lcyrrXbDyy+wzmTw2Mo21WZtq
        7YiWPqfqJ0Lb2E6bKrbRoVaNWckpOSrYUyR/blf1lSGoywcJVP0Bc+Lw4XqWiXzLzkPXKtjT8LU5um8h
        PfamHrKOsfOYzqfSsjH6yQEI+qJepesh283xMY0VbaSyGBicgiszycJnFBnxKSqlqEyfMboSjFMZIFL1
        zcagTZZ+W08C8jzI574kY6S3bCgI4FUAB9exXgNUKf8S/5RPJZSWBAGt1xjYofITqGyOz+A7+JCeIETb
        Vn2pLPrYEIxB/RyUZPIdA/k17+Z6qNaOqPQJ0k+8G+qFtlmvuuuWPqoxKzkr29E3hzeHON+rdlVZplWH
        8WI5NieP7Myjkok85RVD1ypawcmhQXd5HlPQ2SE4ZHvX0xhjNq50qvnE8h7bVWVj42ssPkU1/im4YlGE
        isJHWIxMNE9mTFGKqFBqRMrOMI76r/pWO22WlYKzEYB87ot8NkJvWSsI0O8AOLh4N1/VOUZSIII8BCO9
        vwVY46mE0lAQ0PoB4FBwQIpBQD6Ess2pRwAQ62Xbqq+IyqKPtcAvNe5YlM+moTXA+qiC5Qr67k1xbj1U
        a0doI896qNZWL8hX6VWBlPaPTCVntp32hrj3VO2qsgzX8Z0M/astts93nZU/kW/ZZehaBj/Wnqz9cC2k
        y7nInsjJYYvvH4IeG3M9j6d20nWv7XJZz/iqw6fI45+KS7NDCQgVhY9oMWZl9iiKPvPmK6fIwQEbjRy6
        6pt8VFyl4GwEIF/1xXhCOsiGqcpaQYDuuPkRXuvP2o6RdHjyiUynfCqhNBQEkAgAeI1CQKCysacq2AEf
        qmyUbV75RW7H99gGVBZ9rAXrhHpsztG3KtQvfneoTXEplY5Ea+PKm+cU6KulV+052R5QyZltl/NQtavK
        MpIly0qZ2ko/sU4lA/msQzF0LYLPMC57Km3Wfqysuc0l6gZdjj0l66XHxqxFfFTnCkge6TrKJ6q+c1nP
        +FXfefxTcUlybaRReMC5KOMaG1VUJFDGtXjAa8HIMXW4YggpgjJFsfSPMvQpFCjQhv5xHPrQkwDyGou6
        JPWbjU4b6sUy1UNO5i+DIofk1CLLm3QVBPBrfN2xcuetPxXkEI4H27EShydycJBW14+dkAWZWk9IFLhI
        X/yOgaBgKJjCDiD74gOA3eRf2BK7Y0PszTXy8i98SH4nf5b9QXfAYxutfAjoh/EZh/6j3wnGoF/qxvVz
        KpBROqvkBdZGXMfMjXze1FWv1Y9g7kPBkuwRkZzSr1Bd6VL21Y0Gn7TBV7iGzK2+Mtp74tzxB/qnP8q0
        V6AToAw9UEZdkupU4+ka8xiDMSQHMtGG/jT2oWEsZFuC5qY1egh6bBztJD/VmkZf6L3HdjDHx1Qnnm2S
        aexGIa8jPslTLmSb2H8vPy1KB63EhKLDRaQkpag4JQQj5TJAQVIqE8uTYMIok2tRyeRJUrKUQv04DkkK
        ymXAJ20pkzHI851+c9uo+BgE6E/y4mHFgab/GXCq1wL8lcKpfwyoHySiC3SkhGzV4Y6u0Bl1en5cqSBA
        GyB2wob4EvbCv7SAWbj4s+wt/6KMa5XvVmWZakHLt+hb42fkr1Wfx4Q1ledJokzrTkQ9q442xAh6Z+7U
        r6jWZYVsFKnaVXaircr5ZE1jI+yiecU2pCGij8iu9KWDBOhf15lj9I2hOQ/tNZEsP+iQoU1li0Mg+ZaA
        HVvzmkuPjQE7YBPVQ2fk8RPawJDtQOMo9fgYdWIb6lRlLfI64pM85QJZGY85TeWHRf/9l172X/fw3fn/
        Zb5T5b/rrHoScG6Jg/YcXgOsmf7559uoudbOs4TmwIaRDzhjflfwdR245jz4EQSwi/355273118/Et+d
        H85/19m5BwE8Uj/lDxOPlf7++9uoudbOx6CgF91BeFM0W4CnJa0nYuZ0/P/ZTu9u5/yP7985xyAg/gYh
        /rfA3zlhhzFzrZ3vhQNfBz+faz26NeYc0GNsAoD8WsmcB5df8HA7E29pnB/Mn1sQwGN/3qOf8jcIp0jY
        AUbMtXq+BzZCvQN0AGB+Zwh08XUCAT8BOF+W/cpj45z764CtJAUBxhhjpuEgYAEOAs4jOQgwxph5OAhY
        gIOA80gOAowxZh4OAhZwcXGxP4CcTpuwgzHGmOk4CDDGGGM2ioMAY4wxZqM4CDDGGGM2ioMAY4wxZqM4
        CDDGGGM2ioMAY4wxZqM4CDDGGGM2ioMAY4wxZqM4CDDGGGM2ioMAY4wxZqM4CDDGGGM2ioMAY4wxZqM4
        CDDGGGM2ioMAY4wxZqM4CDDGGGM2ioMAY4wxZqM4CDDGGGM2ioMAY4wxZqM4CDDGGGM2yW73HwAxPW/5
        x0J1AAAAAElFTkSuQmCC
</value>
  </data>
</root>