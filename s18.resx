<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0zTNNE9P/w+B9RydG4kJ0AAAAABJRU5ErkJggg==
</value>
  </data>
</root>